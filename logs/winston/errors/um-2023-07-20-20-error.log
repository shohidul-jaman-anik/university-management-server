{
  issues: [
    {
      code: 'invalid_type',
      expected: 'string',
      received: 'number',
      path: [ 'body', 'year' ],
      message: 'Expected string, received number'
    }
  ],
  addIssue: [Function (anonymous)],
  addIssues: [Function (anonymous)],
  name: 'ZodError',
  level: 'error',
  message: 'ðŸ”´ globalErrorHandler ~ [\n' +
    '  {\n' +
    '    "code": "invalid_type",\n' +
    '    "expected": "string",\n' +
    '    "received": "number",\n' +
    '    "path": [\n' +
    '      "body",\n' +
    '      "year"\n' +
    '    ],\n' +
    '    "message": "Expected string, received number"\n' +
    '  }\n' +
    ']',
  stack: 'ZodError: [\n' +
    '  {\n' +
    '    "code": "invalid_type",\n' +
    '    "expected": "string",\n' +
    '    "received": "number",\n' +
    '    "path": [\n' +
    '      "body",\n' +
    '      "year"\n' +
    '    ],\n' +
    '    "message": "Expected string, received number"\n' +
    '  }\n' +
    ']\n' +
    '    at Object.get error [as error] (C:\\Next Level Course\\UniversityManagement\\UniversityManagementServer\\node_modules\\zod\\lib\\types.js:43:31)\n' +
    '    at ZodObject.parseAsync (C:\\Next Level Course\\UniversityManagement\\UniversityManagementServer\\node_modules\\zod\\lib\\types.js:164:22)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:96:5)',
  label: 'UMðŸ˜Š',
  timestamp: '2023-07-20T14:50:54.634Z'
}
{
  issues: [
    {
      code: 'invalid_type',
      expected: 'string',
      received: 'number',
      path: [ 'body', 'year' ],
      message: 'Expected string, received number'
    }
  ],
  addIssue: [Function (anonymous)],
  addIssues: [Function (anonymous)],
  name: 'ZodError',
  level: 'error',
  message: 'ðŸ”´ globalErrorHandler ~ [\n' +
    '  {\n' +
    '    "code": "invalid_type",\n' +
    '    "expected": "string",\n' +
    '    "received": "number",\n' +
    '    "path": [\n' +
    '      "body",\n' +
    '      "year"\n' +
    '    ],\n' +
    '    "message": "Expected string, received number"\n' +
    '  }\n' +
    ']',
  stack: 'ZodError: [\n' +
    '  {\n' +
    '    "code": "invalid_type",\n' +
    '    "expected": "string",\n' +
    '    "received": "number",\n' +
    '    "path": [\n' +
    '      "body",\n' +
    '      "year"\n' +
    '    ],\n' +
    '    "message": "Expected string, received number"\n' +
    '  }\n' +
    ']\n' +
    '    at Object.get error [as error] (C:\\Next Level Course\\UniversityManagement\\UniversityManagementServer\\node_modules\\zod\\lib\\types.js:43:31)\n' +
    '    at ZodObject.parseAsync (C:\\Next Level Course\\UniversityManagement\\UniversityManagementServer\\node_modules\\zod\\lib\\types.js:164:22)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:96:5)',
  label: 'UMðŸ˜Š',
  timestamp: '2023-07-20T14:52:03.662Z'
}
{
  statusCode: 409,
  level: 'error',
  message: 'ðŸ”´ globalErrorHandler ~ Academic semester is already exist !',
  stack: 'Error: Academic semester is already exist !\n' +
    '    at model.<anonymous> (C:\\Next Level Course\\UniversityManagement\\UniversityManagementServer\\src\\app\\modules\\academicSemester\\academicSemesterModel.ts:56:11)\n' +
    '    at Generator.next (<anonymous>)\n' +
    '    at fulfilled (C:\\Next Level Course\\UniversityManagement\\UniversityManagementServer\\src\\app\\modules\\academicSemester\\academicSemesterModel.ts:5:58)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:96:5)',
  label: 'UMðŸ˜Š',
  timestamp: '2023-07-20T14:52:16.423Z'
}
{
  index: 0,
  code: 11000,
  keyPattern: { title: 1 },
  keyValue: { title: 'Faculty of Arts and Social Science' },
  level: 'error',
  message: 'ðŸ”´ globalErrorHandler ~ E11000 duplicate key error collection: university-management.academicfaculties index: title_1 dup key: { title: "Faculty of Arts and Social Science" }',
  stack: 'MongoServerError: E11000 duplicate key error collection: university-management.academicfaculties index: title_1 dup key: { title: "Faculty of Arts and Social Science" }\n' +
    '    at C:\\Next Level Course\\UniversityManagement\\UniversityManagementServer\\node_modules\\mongodb\\src\\operations\\insert.ts:85:25\n' +
    '    at C:\\Next Level Course\\UniversityManagement\\UniversityManagementServer\\node_modules\\mongodb\\src\\cmap\\connection_pool.ts:574:11\n' +
    '    at C:\\Next Level Course\\UniversityManagement\\UniversityManagementServer\\node_modules\\mongodb\\src\\sdam\\server.ts:368:13\n' +
    '    at handleOperationResult (C:\\Next Level Course\\UniversityManagement\\UniversityManagementServer\\node_modules\\mongodb\\src\\sdam\\server.ts:502:14)\n' +
    '    at Connection.onMessage (C:\\Next Level Course\\UniversityManagement\\UniversityManagementServer\\node_modules\\mongodb\\src\\cmap\\connection.ts:418:5)\n' +
    '    at MessageStream.<anonymous> (C:\\Next Level Course\\UniversityManagement\\UniversityManagementServer\\node_modules\\mongodb\\src\\cmap\\connection.ts:243:56)\n' +
    '    at MessageStream.emit (node:events:527:28)\n' +
    '    at processIncomingData (C:\\Next Level Course\\UniversityManagement\\UniversityManagementServer\\node_modules\\mongodb\\src\\cmap\\message_stream.ts:187:12)\n' +
    '    at MessageStream._write (C:\\Next Level Course\\UniversityManagement\\UniversityManagementServer\\node_modules\\mongodb\\src\\cmap\\message_stream.ts:68:5)\n' +
    '    at writeOrBuffer (node:internal/streams/writable:389:12)',
  label: 'UMðŸ˜Š',
  timestamp: '2023-07-20T14:52:59.970Z',
  [Symbol(errorLabels)]: Set(0) {}
}
